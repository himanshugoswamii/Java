package Session11;

class InsufficientFundsException extends Exception{
	
	double needs;
	InsufficientFundsException(double n){
		needs=n;
	}
	
	public double getAmount(){
		return needs;
	}
}


class CheckingAccount{
	private double balance;
	private int number;
	public CheckingAccount(int n){
		number=n;
	}
	public void deposit(double amount){
		balance=balance + amount;
	}
	public void withdraw(double amount)throws InsufficientFundsException
	{
		if(amount<=balance)
		{
			balance=balance - amount;
			System.out.println("Your remaining balance is "+balance);
		}
		else
		{
			double needs=amount-balance;
			throw new InsufficientFundsException(needs);
		}
	}
	public double getBalance(){
		return balance;
	}
	public int getNumber(){
		return number;
	}
	
}

public class BankDemo {

	public static void main(String[] args) {
		CheckingAccount c=new CheckingAccount(101);
		System.out.println("Depositing $500...");
		c.deposit(500.00);
		try{
			System.out.println("\nWithdrawing $100..");
			c.withdraw(100.00);
			System.out.println("\nWithdrawing %600..");
			c.withdraw(600.00);
			
		}
		catch(InsufficientFundsException e){
			System.out.println("Sorry but you are short $ "+e.getAmount());
			//e.printStackTrace();
		}

	}

}
